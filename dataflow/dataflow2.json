{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CalendarJoin",
						"type": "DatasetReference"
					},
					"name": "Calendar"
				},
				{
					"dataset": {
						"referenceName": "NoSQLRSS",
						"type": "DatasetReference"
					},
					"name": "RSSparseSource"
				},
				{
					"dataset": {
						"referenceName": "NoSQLReddit",
						"type": "DatasetReference"
					},
					"name": "RedditparseSource"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "PriceHist"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CosmosDbSqlApiCollection2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RSSscore"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "RedditScores"
				},
				{
					"name": "Join3"
				}
			],
			"script": "source(output(\n\t\tCalenarDatetime as timestamp,\n\t\tCalendarDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Calendar\nsource(output(\n\t\tdate as string,\n\t\t{sentiment score} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tquery: 'SELECT RSSparsedBCHnews.date,\\nRSSparsedBCHnews[\"sentiment score\"] \\n\\n FROM RSSparsedBCHnews',\n\tformat: 'documentQuery',\n\tsystemColumns: false) ~> RSSparseSource\nsource(output(\n\t\tDate as string,\n\t\t{body sentiment score} as double,\n\t\t{title sentiment score} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tquery: 'SELECT APIparsedBCHnews.Date,\\nAPIparsedBCHnews[\"title sentiment score\"],\\nAPIparsedBCHnews[\"body sentiment score\"]\\n\\n FROM APIparsedBCHnews',\n\tformat: 'documentQuery',\n\tsystemColumns: false) ~> RedditparseSource\nsource(output(\n\t\tDate_price as date,\n\t\tPrice as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> PriceHist\nRSSparseSource derive(date = toDate(date)) ~> RSSscore\nCalendar, RSSscore join(CalendarDate == date,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1, RedditScores join(CalendarDate == RedditScores@Date,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nRedditparseSource derive(Date = toDate(Date)) ~> RedditScores\nJoin2, PriceHist join(CalendarDate == Date_price,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'document',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}